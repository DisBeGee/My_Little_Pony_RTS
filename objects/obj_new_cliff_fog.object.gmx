<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprite47</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.cliff_fog=surface_create(room_width/8,room_height/8);

//Memory saver; sets all tiles to true until otherwise told
for (i=0;i&lt;room_width;i+=64) {    

    for (z=0;z&lt;room_height;z+=32) 
    {
        tileCliffBool[i,z] = true;
    }
}

//Start up loop:
alarm[0] = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
surface_set_target(global.cliff_fog)
draw_clear_alpha(c_white,0)
surface_reset_target()

for (i=0;i&lt;room_width;i+=64) {
    for (z=0;z&lt;room_height;z+=32) {
        
        tileId = tile_layer_find(999999,i,z);
        
        if tileId&gt;1000 {
            surface_set_target(global.cliff_fog);
            draw_set_blend_mode(bm_add);
            draw_set_alpha(1);
            draw_circle(i/8,z/8,10/8,0)  //BUG FIXED must divide coord by 2!!
            //draw_triangle(ex,why+16,ex+32,why,ex-32,why,1);
            //draw_triangle(ex,why-16,ex+32,why,ex-32,why,1);                       
            draw_set_blend_mode(bm_normal);
            surface_reset_target();                  
        
        
        
        }
    }

}

alarm[0] = 10



/*
for (i=0;i&lt;room_width;i+=64) {    //Save memory by applying only every 64 units in x axis

    for (z=0;z&lt;room_height;z+=32)  //Same applies except every 32 units. Dimensions of tiles are 64x32

    {
        if (
        view_xview[0] &lt; i + 100 &amp;&amp; //Left Screen Limit      200
        view_xview[0] &gt; i - 600 &amp;&amp; //Right Screen Limit    1200
        view_yview[0] &lt; z + 100 &amp;&amp; //Top Screen Limit       200
        view_yview[0] &gt; z - 400) //Bottom Screen Limit      600
        {
            if (tileCliffBool[i,z]) = true { //Testing if it is worth it to run calculations on tile
           
                tileId[i,z] = tile_layer_find(999999,i,z); //Detecting if tile exists on layer 1 million. **Set dedicated layer for cliffs at 999999
                
                if (tileId[i,z] &gt; 10000) {      // If tileId &gt; 10000 then a tile exists
                
                        nearally = instance_nearest(i,z,obj_ally_unit_parent);
            
                        dist[i,z] = point_distance(i,z,nearally.x,nearally.y);
                        
                        //Optimize to only run if there are units nearby
                        if (dist[i,z] &lt; 350) {
                            
                            //ex = (i/2)+8;
                            //why = (z/2)+8;
                            
                            ex = (i/8)
                            why = (z/8)
                            
                            //Same code imported from multiplayer units
                            surface_set_target(global.cliff_fog);
                            draw_set_blend_mode(bm_add);
                            draw_set_alpha(1);
                            draw_circle(i/8,z/8,10/8,0)  //BUG FIXED must divide coord by 2!!
                            //draw_triangle(ex,why+16,ex+32,why,ex-32,why,1);
                            //draw_triangle(ex,why-16,ex+32,why,ex-32,why,1);                       
                            draw_set_blend_mode(bm_normal);
                            surface_reset_target();
                        
                        }
                }
                
                else { //On first run, if there is no tile, set to false
                        tileCliffBool[i,z] = false;
                }
            }
        }
    }
}

alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface_ext(global.cliff_fog,0,0,8,8,0,c_black,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
