<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>WholeMapCliff</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -room_height

//2 passes since it is isometric system 
/*
cliff_grass = surface_create(room_width,room_height);

adjust_x = -64
adjust_y = 0

surface_set_target(cliff_grass)

for (i=0;i&lt;room_width;i+=64) {
    for (j=0;j&lt;room_height;j+=32) {
        if (collision_point(i,j,EntireCliffs,true,false)) {
            if (!collision_point(i+64,j,EntireCliffs,true,false) ||
                !collision_point(i-64,j,EntireCliffs,true,false) ||
                !collision_point(i,j+32,EntireCliffs,true,false) ||
                !collision_point(i,j-32,EntireCliffs,true,false)) {
        
                tile_add(IsoGrassTile,0,0,64,32,i+adjust_x,j+adjust_y,-j-32);
            }
        }
    }
}

//2nd pass
for (i=32;i&lt;room_width;i+=64) {
    for (j=16;j&lt;room_height;j+=32) {
        if (collision_point(i,j,EntireCliffs,true,false)) {
            if (!collision_point(i+64,j,EntireCliffs,true,false) ||
                !collision_point(i-64,j,EntireCliffs,true,false) ||
                !collision_point(i,j+32,EntireCliffs,true,false) ||
                !collision_point(i,j-32,EntireCliffs,true,false)) {
        
                tile_add(IsoGrassTile,0,0,64,32,i+adjust_x,j+adjust_y,-j-32);
            }
        }
    }
}

surface_reset_target()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,0,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
