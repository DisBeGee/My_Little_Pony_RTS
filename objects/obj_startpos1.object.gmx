<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>posId = 1;

if (posId == global.PlayerId) {
    global.main_base = false
}

hq_building = spr_headquarters_iso

bbox_y = (sprite_get_bbox_bottom(hq_building) - sprite_get_bbox_top(hq_building))/2


if (posId==global.random_start)
{
    // create units
    write_ushort(global.ServerSocket,802); // message header: create unit
    write_ushort(global.ServerSocket,2); // type
    write_ubyte(global.ServerSocket,global.PlayerId); // owner
    write_short(global.ServerSocket,x-45); // x
    write_short(global.ServerSocket,y + bbox_y); // y
    
    write_ushort(global.ServerSocket,802); // message header: create unit
    write_ushort(global.ServerSocket,2); // type
    write_ubyte(global.ServerSocket,global.PlayerId); // owner
    write_short(global.ServerSocket,x-135); // x
    write_short(global.ServerSocket,y + bbox_y); // y
    
    write_ushort(global.ServerSocket,802); // message header: create unit
    write_ushort(global.ServerSocket,2); // type
    write_ubyte(global.ServerSocket,global.PlayerId); // owner
    write_short(global.ServerSocket,x+45); // x
    write_short(global.ServerSocket,y + bbox_y); // y
    
    write_ushort(global.ServerSocket,802); // message header: create unit
    write_ushort(global.ServerSocket,2); // type
    write_ubyte(global.ServerSocket,global.PlayerId); // owner
    write_short(global.ServerSocket,x+135); // x
    write_short(global.ServerSocket,y + bbox_y); // y
    
    // create haus
    write_ushort(global.ServerSocket,808); // message header: create building
    write_ushort(global.ServerSocket,2); // type
    write_ubyte(global.ServerSocket,global.PlayerId); // owner
    write_short(global.ServerSocket,x); // x
    write_short(global.ServerSocket,y); // y
}
//else
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
