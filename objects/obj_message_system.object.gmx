<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000003</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// setup - start
message_x = 600; //xposition of the message, relative to the view port
message_y = obj_HUD.ypos; //xposition of the message, relative to the view port
message_ygap = 19; //y - gap between texts
message_queue[0] = 99 //this array holds the list of messages to show
message_queue_life[0] = 99; //How long each message in queue has left to live
message_life = 100; // how long the message stays on screen
message_cap = 4; // the max amount of messages allowed to be shown
message_count = 0; //the amount of messages in the message queue
message_recieved = "99"; // this is the message that is to be entered into the queue
message = "99"; //hold teh current message to be entered into the queue

message_col = c_white; //the color of the text
// setup - end

//initialise the arrays
for (i=0;i&lt;message_cap;i+=1)
{
    message_queue[i] = "99";
}
for (i=0;i&lt;message_cap;i+=1)
{
    message_queue_life[i] = "99";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// recieve messages - start
if (!(message_recieved=="99"))
{
    message = message_recieved;
    message_recieved = "99";
}
// recieve messages - end

//place new messages into list - start
if (!(message=="99"))
{
    if (message_count==0)
    {
        message_queue[0] = message;
        message_queue_life[0] = message_life;
        message_count += 1;
        message = "99";
    }
    else
    {
        for (i=(message_cap-1);i&gt;0;i-=1) // push everything in the list back
        {
            message_queue[i] = message_queue[(i-1)];
            message_queue_life[i] = message_queue_life[(i-1)];
        }
        message_queue[0] = message;
        message_queue_life[0] = message_life;
        message = "99";
        if (message_count&lt;message_cap)
        {
            message_count += 1;
        }
    }
}
//place new messages into list - end

// message tick - start
if (message_count&gt;0)
{
    for (i=0;i&lt;message_count;i+=1) //reduce the life of all messages
    {
        if (message_queue_life[i]&gt;0)
        {
            message_queue_life[i] -= 1;
        }
    }
    
    counter = 0;
    for (i=0;i&lt;message_count;i+=1) //kill all the dead messages
    {
        if (message_queue_life[counter]&gt;0)
        {
            counter += 1;
        }
        else
        {
            message_count -= 1;//delete message
            
            for (i=counter;i&lt;(message_cap-1);i+=1)//push everying down
            {
                message_queue[counter] = message_queue[(counter+1)];
                message_queue_life[counter] = message_queue_life[(counter+1)];
            }
        }
    }
}
//message tick - end</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw messages
if (message_count&gt;0)
{
    for (i=0;i&lt;message_count;i+=1)
    {
        draw_set_alpha(1);
        draw_set_color(message_col);
        if (message_queue_life[i]&lt;=40)
        {
            draw_set_alpha(message_queue_life[i]/40);
        }
        draw_text(view_xview[0]+message_x,view_yview[0]+message_y-(i*message_ygap),message_queue[i]);
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
