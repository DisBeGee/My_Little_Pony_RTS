<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireball_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_projectile_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* -- setup variables -- */ // Default values below
/* var */ fastness = 10
/* var */ targetx = 99
/* var */ targety = 99
/* var */ damage = 99
/* var */ target = 99
/* var */ init_dir = 99
/* var */ aoe = 99
/* var */ prevx = 0;
/* var */ prevy = 0;
/* var */ targetable_units = obj_enem_unit_parent; //NEW (jan 2013) units that can be hit with this projectile 
/* var */ 
/* -- bloody graphics -- */
/* var */ anim[0] = spr_fireball_down
/* var */ anim[1] = spr_fireball_downright
/* var */ anim[2] = spr_fireball_right
/* var */ anim[3] = spr_fireball_upright
/* var */ anim[4] = spr_fireball_up
/* var */ anim[5] = spr_fireball_upleft
/* var */ anim[6] = spr_fireball_left
/* var */ anim[7] = spr_fireball_downleft

// Network
create_multi = false; // to create for other clients
owned = true; // if player owns this projectile
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move to target
mp_linear_step(targetx,targety,fastness,false);// to make this homing, 1. change tagetx/y with target.x/y and use potential instead of linear

//exploding
nrst_enemy = instance_nearest(x, y, targetable_units)

if instance_exists(nrst_enemy)
{
    if (distance_to_point(nrst_enemy.x, nrst_enemy.y) &lt;= aoe)
    {
        if (global.multiplayer_game) // Network
        {
            if (owned)
            {
                // send damage message
                write_ushort(global.ServerSocket,22) //message id: forward message to single client
                write_ubyte(global.ServerSocket,6) //message size
                write_ubyte(global.ServerSocket,nrst_enemy.ownerId) //recipient
                write_ushort(global.ServerSocket,1002) //message id: update for damage
                write_ushort(global.ServerSocket,nrst_enemy.netId) //unit id (netid)
                write_short(global.ServerSocket,damage) //damage taken
            }
            instance_create(x,y,obj_explo_1);
            instance_destroy();
        }
        else { // non-multiplayer
        nrst_enemy.unit_hp -= damage;
        //you can put an explosion animation here if you want
        instance_create(x,y,obj_explo_1);
        instance_destroy();
        }
    }
}

// disappearing
if x = targetx &amp;&amp; y = targety
{
    instance_create(x,y,obj_explo_1);
    instance_destroy();
}

//check to see if it stuck
if (prevx==x &amp;&amp; prevy==y)
{
    instance_create(x,y,obj_explo_1);
    instance_destroy();
}
else
{
    prevx = x;
    prevy = y;
}

// Network - start
if (global.multiplayer_game)
{
    if (create_multi == false) // create spell for other players
    {
        write_ushort(global.ServerSocket,20); // message header: broadcast message
        write_ubyte(global.ServerSocket,17); // message size
        write_ushort(global.ServerSocket,600); // message header: create spell projectile
        write_ushort(global.ServerSocket,1); // spell index (used for spell handler)
        write_ubyte(global.ServerSocket,global.p_team[global.PlayerId]); // spell team owner
        //other info needed
        write_short(global.ServerSocket,x); // xpos
        write_short(global.ServerSocket,y); // ypos
        write_short(global.ServerSocket,targetx); // targetx
        write_short(global.ServerSocket,targety); // targety
        write_short(global.ServerSocket,damage); // damage    
        write_short(global.ServerSocket,aoe); // aoe

        create_multi = true;
    }
}
// Network - end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// drawing the diff dirs of the projectile - start
if direction &gt; 247 &amp;&amp; direction &lt; 292 {draw_sprite(anim[0],-1,x,y);}
if direction &gt; 292 &amp;&amp; direction &lt; 332 {draw_sprite(anim[1],-1,x,y);}
if (direction &gt; 332 &amp;&amp; direction &lt; 360) or (direction &gt; 0 &amp;&amp; direction &lt; 22) {draw_sprite(anim[2],-1,x,y);}
if direction &gt; 22 &amp;&amp; direction &lt; 67 {draw_sprite(anim[3],-1,x,y);}
if direction &gt; 67 &amp;&amp; direction &lt; 112 {draw_sprite(anim[4],-1,x,y);}
if direction &gt; 112 &amp;&amp; direction &lt; 157 {draw_sprite(anim[5],-1,x,y);}
if direction &gt; 157 &amp;&amp; direction &lt; 202 {draw_sprite(anim[6],-1,x,y);}
if direction &gt; 202 &amp;&amp; direction &lt; 247 {draw_sprite(anim[7],-1,x,y);}
// drawing the diff dirs of the projectile - end</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
