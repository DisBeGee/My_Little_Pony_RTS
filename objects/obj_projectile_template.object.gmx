<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_man_right_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_projectile_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* -- setup variables -- */ 
/* var */ fastness = 99
/* var */ targetx = 99
/* var */ targety = 99
/* var */ damage = 99
/* var */ target = 99
/* var */ init_dir = 99
/* var */ aoe = 99
/* var */ prevx = 0
/* var */ prevy = 0
/* var */ 
/* -- bloody graphics -- */
/* var */ anim[0] = spr_man_down_arrow
/* var */ anim[1] = spr_man_downright_arrow
/* var */ anim[2] = spr_man_right_arrow
/* var */ anim[3] = spr_man_upright_arrow
/* var */ anim[4] = spr_man_up_arrow
/* var */ anim[5] = spr_man_upleft_arrow
/* var */ anim[6] = spr_man_left_arrow
/* var */ anim[7] = spr_man_downleft_arrow
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move to target
mp_linear_step(targetx,targety,fastness,false);// to make this homing, 1. change tagetx/y with target.x/y and use potential instead of linear

// doing the damage
if x = targetx &amp;&amp; y = targety
{
    if instance_exists(target) &amp;&amp; distance_to_object(target) &lt;= aoe //dont use aoe, it doesnt work properly yet
    {
        if (global.multiplayer_game) // Network
        {
            if (owner = global.PlayerId)
            {
                // send damage message (Haven't tested to see if this works properly)
                write_ushort(global.ServerSocket,22) //message id: forward message to single client
                write_ubyte(global.ServerSocket,6) //message size
                write_ubyte(global.ServerSocket,target.ownerId) //recipient
                write_ushort(global.ServerSocket,1002) //message id: update for damage
                write_ushort(global.ServerSocket,target.netId) //unit id (netid)
                write_short(global.ServerSocket,damage) //damage taken
            }
        }
        else
        {
            target.unit_hp -= damage; 
        }
    }
    instance_destroy();
}

//check to see if it stuck
if (prevx==x &amp;&amp; prevy==y)
{
    instance_destroy();
}
else
{
    prevx = x;
    prevy = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// drawing the diff dirs of the projectile - start
if direction &gt; 247 &amp;&amp; direction &lt; 292 {draw_sprite(anim[0],-1,x,y);}
if direction &gt; 292 &amp;&amp; direction &lt; 332 {draw_sprite(anim[1],-1,x,y);}
if (direction &gt; 332 &amp;&amp; direction &lt; 360) or (direction &gt; 0 &amp;&amp; direction &lt; 22) {draw_sprite(anim[2],-1,x,y);}
if direction &gt; 22 &amp;&amp; direction &lt; 67 {draw_sprite(anim[3],-1,x,y);}
if direction &gt; 67 &amp;&amp; direction &lt; 112 {draw_sprite(anim[4],-1,x,y);}
if direction &gt; 112 &amp;&amp; direction &lt; 157 {draw_sprite(anim[5],-1,x,y);}
if direction &gt; 157 &amp;&amp; direction &lt; 202 {draw_sprite(anim[6],-1,x,y);}
if direction &gt; 202 &amp;&amp; direction &lt; 247 {draw_sprite(anim[7],-1,x,y);}
// drawing the diff dirs of the projectile - end</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
