<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_curs_cast</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000004</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr = spr_curs_cast
casttype = 99;
targettype = 99;
spell_cost = 99;
range = 99;
owner = obj_HUD.target
active = true;

x = -100
y = -100</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(owner)
{
    if (active==false)
    {
        if (instance_exists(obj_HUD.target))
        {
            if (obj_HUD.target.selected==false)
            {
                obj_HUD.target.selected = true;
                global.number_of_selected += 1;
            }
        }
        instance_destroy();
    }
    else
    {
        with (obj_unit_template){ if (selected==true){ selected=false;global.number_of_selected-=1;}}
        with (obj_building_template){ if (selected==true){ selected=false;global.number_of_selected-=1;}}
        
        if (owner.selected==false)
        {
            owner.selected = true;
            global.number_of_selected += 1;
        }
    }
}
else
{
    instance_destroy();
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = -100;
y = -100;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active==true)
{
    instance_destroy();
    //refund mana cost
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if mouse is not in hud - start
if mouse_y - view_yview[0] &lt;= obj_HUD.border
{



if (active==true)
{
    switch (casttype)
    {
        case 0:
        {
            //your code here
            angle = point_direction(obj_HUD.target.x, obj_HUD.target.y, mouse_x, mouse_y)
            rad = ((angle*pi)/180);
            obj_HUD.target.cast_targetx = obj_HUD.target.x+(range*(cos(rad)));
            obj_HUD.target.cast_targety = obj_HUD.target.y+(range*(-sin(rad)));
            obj_HUD.target.cast = true;
            active = false;
        } break;
        case 1:
        {
            //your code here
            switch (targettype)
            {
                case 0:
                {
                    //instance_deactivate_object(self);
                    temp_target = instance_nearest(mouse_x, mouse_y, obj_enem_unit_parent);
                    //instance_activate_object(self);
                    if (instance_exists(temp_target))
                    {
                        x=mouse_x;
                        y=mouse_y;
                        if (distance_to_object(temp_target)&lt;=10)
                        {
                            obj_HUD.target.cast_target = temp_target;
                            obj_HUD.target.cast = true;
                            active = false;
                        }
                    }
                } break;
                case 1:
                {
                    //instance_deactivate_object(self);
                    temp_target = instance_nearest(mouse_x, mouse_y, obj_ally_unit_parent);
                    //instance_activate_object(self);
                    if (instance_exists(temp_target))
                    {
                        x=mouse_x;
                        y=mouse_y;
                        if (distance_to_object(temp_target)&lt;=10)
                        {
                            obj_HUD.target.cast_target = temp_target;
                            obj_HUD.target.cast = true;
                            active = false;
                        }
                    }
                } break;
                case 2:
                {
                    //instance_deactivate_object(self);
                    temp_target = instance_nearest(mouse_x, mouse_y, all);
                    //instance_activate_object(self);
                    if (instance_exists(temp_target))
                    {
                        if ((object_get_parent(temp_target)==obj_ally_parent)||(object_get_parent(temp_target)==obj_enem_parent))
                        {
                            x=mouse_x;
                            y=mouse_y;
                            if (distance_to_object(temp_target)&lt;=10)
                            {
                                obj_HUD.target.cast_target = temp_target;
                                obj_HUD.target.cast = true;
                                active = false;
                            }
                        }
                    }
                } break;
            }
        } break;
        case 2:
        {  
            //your code here
            obj_HUD.target.cast_targetx = mouse_x;
            obj_HUD.target.cast_targety = mouse_y;
            obj_HUD.target.cast = true;
            active = false;
        } break;
        case 3:
        {  
            //your code here
            obj_HUD.target.cast = true;
            active = false;
        } break;
    }
}
    
    
    
}
//if mouse is not in hud - end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active==true)
{
    draw_sprite(spr, -1, mouse_x, mouse_y);
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
