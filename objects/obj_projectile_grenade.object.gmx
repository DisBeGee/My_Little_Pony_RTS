<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spell_grenade_up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_projectile_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* -- setup variables -- */ 
/* var */ fastness = 37 //this is different for the grenade - this specifies how long it is in the air for
/* var */ targetx = 99
/* var */ targety = 99
/* var */ damage = 99
/* var */ target = 99
/* var */ init_dir = 99
/* var */ aoe = 99
/* var */ prevx = 0;
/* var */ prevy = 0;
/* var */ 
/* var */ 
/* -- bloody graphics -- */
/* var */ anim[0] = spr_spell_grenade_up;
/* var */ anim[1] = spr_spell_grenade_up;
/* var */ anim[2] = spr_spell_grenade_up;
/* var */ anim[3] = spr_spell_grenade_up;
/* var */ anim[4] = spr_spell_grenade_up;
/* var */ anim[5] = spr_spell_grenade_up;
/* var */ anim[6] = spr_spell_grenade_up;
/* var */ anim[7] = spr_spell_grenade_up;

// maths stuff
startx = x;
starty = y;
dist = 0;
durr = 0;
spd = 0;
mx_height = 60;
curr_dist = 0;
height = 0;
calcs = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -(ystart + lengthdir_y(curr_dist+(dist/2),durr));</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init maths stuff
if (calcs==false)
{
    dist = point_distance(x,y,targetx,targety);
    durr = point_direction(x,y,targetx,targety);
    spd = dist/fastness;
    //mx_height = 60;
    curr_dist = -(dist/2);

    root = sqrt(mx_height);
    scale = 1/((dist/2)/sqrt(mx_height));   
    //height = 0;
    direction = durr;
    calcs = true;
}

if (curr_dist&gt;(dist/2))
{
    //create your explosion here
    instance_create(x,y,obj_explo_gren);
    instance_destroy();
}

height = (-1)*power((scale*curr_dist),2)+mx_height;

x = xstart + lengthdir_x(curr_dist+(dist/2),durr);
y = ystart + lengthdir_y(curr_dist+(dist/2),durr);

y -= height;

curr_dist += spd;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// drawing the diff dirs of the projectile - start
if direction &gt; 247 &amp;&amp; direction &lt; 292 {draw_sprite(anim[0],-1,x,y);}
if direction &gt; 292 &amp;&amp; direction &lt; 332 {draw_sprite(anim[1],-1,x,y);}
if (direction &gt; 332 &amp;&amp; direction &lt; 360) or (direction &gt; 0 &amp;&amp; direction &lt; 22) {draw_sprite(anim[2],-1,x,y);}
if direction &gt; 22 &amp;&amp; direction &lt; 67 {draw_sprite(anim[3],-1,x,y);}
if direction &gt; 67 &amp;&amp; direction &lt; 112 {draw_sprite(anim[4],-1,x,y);}
if direction &gt; 112 &amp;&amp; direction &lt; 157 {draw_sprite(anim[5],-1,x,y);}
if direction &gt; 157 &amp;&amp; direction &lt; 202 {draw_sprite(anim[6],-1,x,y);}
if direction &gt; 202 &amp;&amp; direction &lt; 247 {draw_sprite(anim[7],-1,x,y);}
// drawing the diff dirs of the projectile - end

//draw shadow
draw_set_color(c_black);
draw_set_alpha(0.5);
trnpx = xstart + lengthdir_x(curr_dist+(dist/2),durr);
trnpy = ystart + lengthdir_y(curr_dist+(dist/2),durr);
draw_ellipse(trnpx-5,trnpy-3,trnpx+5,trnpy+3,false);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
