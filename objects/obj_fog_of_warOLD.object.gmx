<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9000007</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprite47</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//setup fog variables
for (i=0;i&lt;32;i+=1)
{
    for (z=0;z&lt;18;z+=1)
    {
        fog[i,z] = true;
        dist[i,z] = 175;
    }
}

/* var */ update_rate = 12; // (12) how often the fog updates - note "1" is the fastest YOU NEED TO UPDATE THIS VALUE IN THE STEP EVENT AS WELL
/* var */ fog = spr_fog; // the spr for the fog **NOT USED!!**
/* var */ view = 150; // view radius (use the same value of units for best effect)

//setup update
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// fog check - start
       


for (i=0;i&lt;32;i+=1)
{
    for (z=0;z&lt;18;z+=1)
    {
    
        pro = instance_nearest(view_xview[0]+(16+(i*32)),view_yview[0]+(16+(z*32)),obj_ally_parent);
        x = view_xview[0]+(16+(i*32));
        y = view_yview[0]+(16+(z*32));
        dist[i,z] = distance_to_object(pro);
        if dist[i,z] &lt;= view
        {
            fog[i,z] = false;
        }
        else
        {
            fog[i,z] = true;
        }
    }
}
//loop update
alarm[0] = update_rate;
//fog check - end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//New stuff (25/1/12)
// This stuff here makes the update rate faster when scrolling the screen, so it looks batter but still runs faster
if (((mouse_x &gt;= view_xview[0] + view_wview[0] -1) &amp;&amp; (view_xview[0] + view_wview[0]&lt;=room_width ))||
    ((mouse_x &lt;= view_xview[0] +1) &amp;&amp; (view_xview[0]&gt;=0))||
    ((mouse_y &gt;= view_yview[0] + view_hview[0] -1) &amp;&amp; (view_yview[0] + view_hview[0]&lt;= room_height + obj_control_ingame.hud_buffer))||
    ((mouse_y &lt;= view_yview[0] +1) &amp;&amp; (view_yview[0]&gt;=0)))
{
    alarm[0] = 1;
    update_rate = 1;
}
else
{
    update_rate = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw fog

for (i=0;i&lt;32;i+=1)
{
    for (z=0;z&lt;18;z+=1)
    {
        if fog[i,z] = true
        {
            if (dist[i,z] &lt;= view + 125)
            {
                draw_set_alpha((dist[i,z]-view)/(view));
            }
            else
            {
                draw_set_alpha(1)
            }
            draw_set_color(c_black);
            //draw_sprite(fog,-1,view_xview[0]+(16 + i*32),view_yview+(16 + z*32));
            draw_rectangle(view_xview[0]+(i*5),view_yview[0]+(z*5+450),view_xview[0]+(i*5+5),view_yview[0]+(z*5+455),false);
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
